{:enums
 {:OrderState {:description "OrderState"
               :values      ["WAITING_MERCHANT_CONFIRMATION" "SEARCHING_CARRIER" "IN_TRANSIT" "DELIVERED"]}
  :UserType   {:description "User Types"
               :values      ["merchant" "carrier" "customer"]}
  :CredType   {:description "Credential Types"
               :values      ["password" "facebook"]}}

 :input-objects
 {:SignUpUserInput     {:fields {:email    {:type String}
                                 :password {:type String}
                                 :name     {:type String}
                                 :type     {:type :UserType}}}
  :SignInUserInput     {:fields {:userType {:type :UserType}
                                 :credType {:type :CredType}
                                 :email    {:type String}
                                 :password {:type String}}}
  :CreateMerchantInput {:fields {:name {:type String}}}
  :CreateCarrierInput  {:fields {:name {:type String}}}
  :CreateCustomerInput {:fields {:name {:type String}}}}

 :objects
 {:Viewer                {:fields {:user         {:type    :User
                                                  :resolve :viewer/user}
                                   :allMerchants {:type    (list :Merchant)
                                                  :resolve :viewer/all-merchants}
                                   :order        {:type    :Order
                                                  :resolve :viewer/order}}}
  :User                  {:fields {:id       {:type ID}
                                   :email    {:type String}
                                   :type     {:type :UserType}
                                   :merchant {:type    :Merchant
                                              :resolve :user/merchant}
                                   :customer {:type    :Customer
                                              :resolve :user/customer}
                                   :carrier  {:type    :Carrier
                                              :resolve :user/carrier}}}
  :Location              {:fields {:lat {:type ID}
                                   :lng {:type ID}}}
  :Customer              {:fields {:id   {:type ID}
                                   :name {:type String}
                                   :user {:type    :User
                                          :resolve :customer/user}}}
  :Carrier               {:fields {:id   {:type ID}
                                   :name {:type String}
                                   :user {:type    :User
                                          :resolve :carrier/user}}}
  :Merchant              {:fields {:id     {:type ID}
                                   :name   {:type String}
                                   :user   {:type   :User
                                            :resole :merchant/user}
                                   :orders {:type    (list :Merchant)
                                            :resolve :merchant/orders}}}
  :Order                 {:fields {:id       {:type ID}
                                   :state    {:type :OrderState}
                                   :carrier  {:type    :Carrier
                                              :resolve :order/carrier}
                                   :customer {:type    :Customer
                                              :resolve :order/customer}}}
  :SignUpUserPayload     {:fields {:user  {:type :User}
                                   :token {:type String}}}
  :SignInUserPayload     {:fields {:user  {:type :User}
                                   :token {:type String}}}
  :CreateMerchantPayload {:fields {:merchant {:type :Merchant}}}
  :CreateCarrierPayload  {:fields {:carrier {:type :Carrier}}}
  :CreateCustomerPayload {:fields {:customer {:type :Customer}}}}

 :queries
 {:viewer {:type    :Viewer
           :resolve :queries/viewer}}

 :mutations
 {:signUpUser                 {:type    :SignUpUserPayload
                               :args    {:input {:type :SignUpUserInput}}
                               :resolve :mutations/sign-up-user}
  :customerSignInWithFacebook {:type    :SignInUserPayload
                               :args    {:facebookToken {:type String}}
                               :resolve :mutations/customer-sign-in-with-facebook}
  :customerSignInWithEmail    {:type    :SignInUserPayload
                               :args    {:email    {:type String}
                                         :password {:type String}}
                               :resolve :mutations/customer-sign-in-with-email}
  :merchantSignInWithEmail    {:type    :SignInUserPayload
                               :args    {:email    {:type String}
                                         :password {:type String}}
                               :resolve :mutations/merchant-sign-in-with-email}
  :carrierSignInWithEmail     {:type    :SignInUserPayload
                               :args    {:email    {:type String}
                                         :password {:type String}}
                               :resolve :mutations/carrier-sign-in-with-email}
  :createMerchant             {:type    :CreateMerchantPayload
                               :args    {:input {:type :CreateMerchantInput}}
                               :resolve :mutations/create-merchant}
  :createCarrier              {:type    :CreateCarrierPayload
                               :args    {:input {:type :CreateCarrierInput}}
                               :resolve :mutations/create-carrier}
  :createCustomer             {:type    :CreateCustomerPayload
                               :args    {:input {:type :CreateCustomerInput}}
                               :resolve :mutations/create-customer}}}